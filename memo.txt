仮説では、マルチプロセス処理が最も実行速度が速いと想定し、実験結果では多重化を施した3つのプログラムでは明らかな差は見られなかったため、仮設通りであったかどうかここで答えを導くことが出来ない。多重化を施したプログラム内で目立った差は見られなかったが、多重化を施さなかったプログラムは明らかに処理速度が遅く、スレッド数が256の場合にはselectやマルチプロセスで多重化をした場合の100倍以上の実行時間となっている。
メッセージの通信に要した時間の平均については、多重化を施さなかった場合はほぼ定数時間で行うことが出来ている反面、多重化を施した場合についてはスレッド数が32あたりからスレッド数に比例して実行時間が伸びていた。メモリの最大使用量に関しては、マルチスレッドの最大使用量が最も多く、そのほかのプログラムはほとんど同じメモリ消費量であったが、わずかながら多重化なしのメモリ消費量が少なかった。これは2.4で述べた仮説が原因だと考えられる。マルチスレッドでの場合のメモリ消費量がスレッド数に応じて増えていくのに対し、マルチプロセスではメモリ消費量が一定であった原因は、マルチスレッドは同一プロセス内でいくつも処理を行うために作業領域を広げていくが、マルチプロセスでは別の処理としてプロセスを立ち上げるからであると考えられる。実際にメモリの最大消費量を調べるコマンドを打つと、マルチプロセスでは実行結果がいくつも表示された。これは、プロセスごとに独立してメモリを割り当てているため、すべてのプロセスを合わせた合計メモリ消費量は多くなるが、単一のプロセスごとに見るとselectや多重化なしの場合と代り映えしないと考えられる。
