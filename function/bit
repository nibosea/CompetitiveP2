https://note.com/syamashi/n/naa1cc61764f7
#include <bits/stdc++.h>

using namespace std;
using ll =long long;
using P = pair<ll,ll>;
//typedef pair<ll,ll> P;
#define SORT(a) sort((a).begin(),(a).end())
#define REV(a) reverse((a).begin(),(a).end())
#define For(i, a, b)    for(int i = (a) ; i < (b) ; ++i)
#define rep(i, n)       For(i, 0, n)
#define debug(x)  cerr << #x << " = " << (x) << endl;
#define fore(i, a) for(auto &i: a)
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return true; } return false; }
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return true; } return false; }
template<typename T> ll comp(vector<T> &A){ map<T, ll> mp; for(auto p: A) mp[p] = 0; ll sz = 0; for(auto &p: mp) p.second = ++sz; for(auto &a: A) a = mp[a]; return sz; }

void coY() {cout <<"Yes"<<endl;}
void coN(){cout <<"No"<<endl;}
void mswap(ll &a, ll &b){ if(a >= b) swap(a,b); }
void rswap(ll &a, ll &b){ if(a <= b) swap(a,b); }

const int dy[] = {0,0,1,-1};
const int dx[] = {1,-1,0,0};
const ll mod = 1e9+7;
const ll MOD = 998244353;
const double PI=3.14159265358979323846;
const int inf = 1001001001;
const ll INF = 1'000'000'000'000'000'000;
//Write From this Line
// BIT,index = 1 ~ (0を投げるととまる
// indexを+1して格納する。
// https://atcoder.jp/contests/abc174/submissions/21572028
template<ll BT>
struct Bit
{
  ll dat[BT+10]{};
  void add(ll i, ll x){
    ++i;
    for(; i<BT; i += i&-i) dat[i] += x;
  }
  ll sum(ll i){
    ++i;
    ll res = 0;
    for(; i>0; i -= i&-i) res += dat[i];
    return res;
  }
  ll rangesum(ll L, ll R){
    ++L, ++R;
    return sum(R) - sum(L-1);
  }
};
int main()
{
    ll n;
    cin >> n;
    vector<ll> A(n), B(n);
    vector<P> p(n);
    rep(i,n) cin >> A[i];
    rep(i,n) cin >> B[i];
    comp(A);
    comp(B);
    Bit<400010> bits;
    rep(i,n) p[i] = {A[i], -B[i]};
    sort(p.begin(),p.end(), greater<P>());
    rep(i,n){
        bits.add(-p[i].second, +1);
    }

    ll ans = 0;
    ll cnt = 1;
    rep(i,n){
        ll a = p[i].first;
        ll b = -p[i].second;
        ll add = bits.rangesum(b-1, 400005);
        ans += add;
        if(i<n-1 && a==p[i+1].first && b ==-p[i+1].second){
            ++cnt;
        } else {
            bits.add(b, -cnt);
            cnt = 1;
        }
    }
    cout << ans << endl;
  //  for(auto x:A) cout << x << " ";
  //  cout << endl;
  //  for(auto x:B) cout << x << " ";
  //  cout << endl;
}